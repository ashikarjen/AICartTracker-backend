name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: password
          POSTGRES_DB: carttracker
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_NAME: carttracker
      DATABASE_USER: test
      DATABASE_PASSWORD: password
      DATABASE_HOST: 127.0.0.1
      DATABASE_PORT: 5432

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for PostgreSQL to be ready
      run: |
        until pg_isready -h ${{ env.DATABASE_HOST }} -p ${{ env.DATABASE_PORT }} -U ${{ env.DATABASE_USER }}; do
          echo "Waiting for PostgreSQL..."
          sleep 5
        done

    - name: Run migrations
      env:
        DATABASE_NAME: ${{ env.DATABASE_NAME }}
        DATABASE_USER: ${{ env.DATABASE_USER }}
        DATABASE_PASSWORD: ${{ env.DATABASE_PASSWORD }}
        DATABASE_HOST: ${{ env.DATABASE_HOST }}
        DATABASE_PORT: ${{ env.DATABASE_PORT }}
      run: |
        python manage.py migrate

    - name: Run tests
      env:
        DATABASE_NAME: ${{ env.DATABASE_NAME }}
        DATABASE_USER: ${{ env.DATABASE_USER }}
        DATABASE_PASSWORD: ${{ env.DATABASE_PASSWORD }}
        DATABASE_HOST: ${{ env.DATABASE_HOST }}
        DATABASE_PORT: ${{ env.DATABASE_PORT }}
      run: |
        python manage.py test
